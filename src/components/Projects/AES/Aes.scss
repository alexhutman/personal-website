@import '../../../variables';
@import '../../../../node_modules/vueperslides/dist/vueperslides.css';

$border-color: white;
$border-stroke: 1px;
$outside-border-stroke: 2 * $border-stroke;

.vueperslide__content-wrapper.parallax-fixed-content,
.vueperslide__content-wrapper:not(.vueperslide__content-wrapper--outside-top):not(.vueperslide__content-wrapper--outside-bottom) {
  //  display: block;
}

.aes-slide::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.example {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

.state-form,
.state-container {
  width: 100%;
}

ol::before {
  color: red;
}
ol {
  /*
  // For some reason, this is not getting set unless I do it in the style attribute of the element itself.
  // Unless I'm missing something, I don't think it's possible to style elements in a Vueper Slide other
  // than in their own style attributes.

  display: inline-block !important;
  text-align: left !important;
  */
}

.aes-container {
  background-color: $main-background-color;
  color: white;
}

.explanation {
  background: #737373;
}

@media (max-width: 767px) {
  .fit-carousel-img {
    width: 90%;
    height: auto;
  }
}

.vertical-center {
  // From https://stackoverflow.com/a/22196760/6708303
  min-height: 100%; /* Fallback for browsers do NOT support vh unit */
  // min-height: 100vh; /* These two lines are counted as one :-)       */

  display: flex;
  align-items: center;
}

.state-grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr;
  grid-template-areas:
    'cell-00 cell-01 cell-02 cell-03'
    'cell-10 cell-11 cell-12 cell-13'
    'cell-20 cell-21 cell-22 cell-23'
    'cell-30 cell-31 cell-32 cell-33';

  div {
    border: $outside-border-stroke solid $border-color;
  }

  .htb {
    // Half top border
    border-top: $border-stroke solid $border-color;
  }

  .hbb {
    // Half bottom border
    border-bottom: $border-stroke solid $border-color;
  }

  .hlb {
    // Half left border
    border-left: $border-stroke solid $border-color;
  }

  .hrb {
    // Half right border
    border-right: $border-stroke solid $border-color;
  }

  width: 20%;

  &::before {
    content: '';
    width: 0;
    padding-bottom: 100%;
    grid-row: 1 / 1;
    grid-column: 1 / 1;
  }

  & > *:first-child {
    grid-row: 1 / 1;
    grid-column: 1 / 1;
  }
}

.no-padding {
  padding: 0;
}

.cell-00 {
  grid-area: cell-00;
}
.cell-01 {
  grid-area: cell-01;
}
.cell-02 {
  grid-area: cell-02;
}
.cell-03 {
  grid-area: cell-03;
}
.cell-10 {
  grid-area: cell-10;
}
.cell-11 {
  grid-area: cell-11;
}
.cell-12 {
  grid-area: cell-12;
}
.cell-13 {
  grid-area: cell-13;
}
.cell-20 {
  grid-area: cell-20;
}
.cell-21 {
  grid-area: cell-21;
}
.cell-22 {
  grid-area: cell-22;
}
.cell-23 {
  grid-area: cell-23;
}
.cell-30 {
  grid-area: cell-30;
}
.cell-31 {
  grid-area: cell-31;
}
.cell-32 {
  grid-area: cell-32;
}
.cell-33 {
  grid-area: cell-33;
}
